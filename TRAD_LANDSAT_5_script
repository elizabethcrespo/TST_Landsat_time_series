// This script calculates the Land Surface Temperature (LST) 
// using the annual median of the image collection of the band ST_TRAD from Landsat 5.
//
// The LST is calculated based on:
// - Thermal Band convert to Radiance
// - Brightness Temperature
// - Emissivity (calculated using indices such as NDVI, FVC, and LAI,  
//   derived from Surface Reflectance (SR) images).
//
// Author: Elizabeth Crespo
// Date: 2023-02-12
// Email: elizabeth.eacrespo@gmail.com
//
// This code is free and open-source.  
// By using this code or any derived data,  
// you agree to cite the following reference in any related publications:
//
// Albernaz Crespo, E. C. E., 2025. 55f.  
// Análise Temporal da Temperatura de Superfície em Área Urbana por Sensoriamento Remoto.
// Trabalho de Conclusão de Curso (Graduação em Ciência Ambiental) – Universidade Federal Fluminense, Niterói.
//
// Remember to modify the following parameters:
// - Landsat collection
// - Constants and Wavelength changes for each Landsat
// - Date
// - Study area location (ROI)
// ---------------------------
//
// Input Parameters for Landsat 5
var startYear = 1985;
var endYear = 2011;
// ---------------------------
// Function to apply scaling factors and cloud masking
function applyScaleAndMaskL5(image) {
  var qa = image.select('QA_PIXEL');
  var cloudMask = qa.bitwiseAnd(1 << 3).or(qa.bitwiseAnd(1 << 5)).not(); // Máscara de nuvens e sombras
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2); // Escala para bandas ópticas
  var radianceBand = image.select('ST_TRAD').multiply(0.001).rename('Radiance'); // Escala para radiância
  return image.addBands(opticalBands, null, true).addBands(radianceBand, null, true).updateMask(cloudMask);
}
// ---------------------------

// Function to calculate Brightness Temperature (Tb) using radiance 
function calculateBrightnessTemperature(image) {
  // Constantes de calibração para o Landsat 5
  var K1 = 607.76;
  var K2 = 1260.56;

  var brightnessTemperature = image.expression(
    'K2 / log((K1 / radiance) + 1)', {
      'K1': K1,
      'K2': K2,
      'radiance': image.select('Radiance') // Banda de radiância escalada
    }).rename('Brightness_Temperature');

  return image.addBands(brightnessTemperature);
}
// ---------------------------

// Function to calculate NDVI, FVC, LAI, and Emissivity
function calculateIndicesAndEmissivity(image) {
  var ndvi = image.expression('(nir - red) / (nir + red)', {
    'nir': image.select('SR_B4'), // Usando a banda SR para NIR
    'red': image.select('SR_B3')  // Usando a banda SR para RED
  }).rename('NDVI');

  var fvc = ndvi.expression('1.1101 * ndvi - 0.0857', {'ndvi': ndvi}).clamp(0, 1).rename('FVC');
  var lai = fvc.expression('-2 * log(1 - fvc)', {'fvc': fvc}).rename('LAI');
  var emissivity = lai.expression('0.97 + 0.0033 * lai', {'lai': lai}).rename('Emissivity');

  return image.addBands(ndvi).addBands(fvc).addBands(lai).addBands(emissivity);
}
// ---------------------------

// Function to calculate LST using Brightness Temperature (Tb) and adjusted emissivity
function calculateTST(image) {
  var brightnessTemperature = image.select('Brightness_Temperature'); // Usa a Tb calculada
  var emissivity = image.select('Emissivity');

/*
  // Constants for LST calculation
  var λ = 10.4 = 0.00104; // Wavelength of Landsat 5
  var α = 1.4388 = 0.48359547432; // Planck's constant
*/
// LST  
     var TST_Kelvin = brightnessTemperature.expression({
    'Tb / (1 + (0.00104 * (Tb/0.48359547432)) * log(em))',{
      'Tb': brightnessTemperature,
      'em': emissivity
    }).rename('TST_Kelvin');

  var TST_Celsius = TST_Kelvin.subtract(273.15).rename('TST_Celsius');
  return image.addBands(TST_Celsius);
}

//-------------------------------------

// Function to process Landsat collections for each year
function processLandsatCollectionL5(region, year) {
  var startDate = ee.Date.fromYMD(year, 1, 1);
  var endDate = ee.Date.fromYMD(year, 12, 31);

  var annualCollection = ee.ImageCollection('LANDSAT/LT05/C02/T1_L2')
    .filterDate(startDate, endDate)
    .filterBounds(region)
    .filter(ee.Filter.lt('CLOUD_COVER', 30)) // Filtro de nuvens
    .map(applyScaleAndMaskL5) // Aplica máscara de nuvens e escalas
    .map(calculateBrightnessTemperature) // Calcula Tb
    .map(calculateIndicesAndEmissivity) // Calcula NDVI, FVC, LAI e Emissividade
    .map(calculateTST); // Calcula TST

  var medianImage = annualCollection.median().clip(region);
  return medianImage.bandNames().size().gt(0) ? medianImage : null;
}
//-------------------------------------

// Loop to process each year and add it to the map
for (var year = startYear; year <= endYear; year++) {
  var annualImage = processLandsatCollectionL5(ROI, year);

 // Check if the image for the year exists before adding it to the map 
  if (annualImage) {
    Map.addLayer(annualImage.select('TST_Celsius'), {min: 10, max: 40, palette: ['blue', 'cyan', 'green', 'yellow', 'red']}, 'Landsat 5 TST - ' + year);
  } else {
    print('No data available for the year:', year);
  }
}

Map.centerObject(ROI, 10);
